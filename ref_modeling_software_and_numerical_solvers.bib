@misc{anderssonCasADiDocumentation2023,
  title = {{{CasADi Documentation}}},
  author = {Andersson, Joel and Gillis, Joris and Horn, Greg},
  year = {2023},
  month = nov,
  url = {https://github.com/casadi/casadi/wiki/Onboarding-Guide}
}

@article{bergmannManoptJlOptimization2022,
  title = {Manopt.Jl: {{Optimization}} on {{Manifolds}} in {{Julia}}},
  shorttitle = {Manopt.Jl},
  author = {Bergmann, Ronny},
  year = {2022},
  month = feb,
  journal = {Journal of Open Source Software},
  volume = {7},
  number = {70},
  pages = {3866},
  issn = {2475-9066},
  doi = {10.21105/joss.03866},
  url = {https://joss.theoj.org/papers/10.21105/joss.03866},
  urldate = {2022-02-11},
  abstract = {Bergmann, R., (2022). Manopt.jl: Optimization on Manifolds in Julia. Journal of Open Source Software, 7(70), 3866, https://doi.org/10.21105/joss.03866},
  langid = {english}
}

@misc{ConicPdf,
  title = {Mosek {{Conic Modeling Cheatsheet}}},
  url = {https://docs.mosek.com/cheatsheets/conic.pdf},
  urldate = {2024-01-27}
}

@article{dunningJuMPModelingLanguage2017,
  title = {{{JuMP}}: {{A Modeling Language}} for {{Mathematical Optimization}}},
  shorttitle = {{{JuMP}}},
  author = {Dunning, Iain and Huchette, Joey and Lubin, Miles},
  year = {2017},
  month = jan,
  journal = {SIAM Review},
  volume = {59},
  number = {2},
  pages = {295--320},
  publisher = {{Society for Industrial and Applied Mathematics}},
  issn = {0036-1445},
  doi = {10.1137/15M1020575},
  url = {https://epubs.siam.org/doi/abs/10.1137/15M1020575},
  urldate = {2020-12-28},
  abstract = {JuMP is an open-source modeling language that allows users to express a wide range of optimization problems (linear, mixed-integer, quadratic, conic-quadratic, semidefinite, and nonlinear) in a high-level, algebraic syntax. JuMP takes advantage of advanced features of the Julia programming language to offer unique functionality while achieving performance on par with commercial modeling tools for standard tasks. In this work we will provide benchmarks, present the novel aspects of the implementation, and discuss how JuMP can be extended to new problem classes and composed with state-of-the-art tools for visualization and interactivity.}
}

@incollection{fourerAlgebraicModelingLanguages2016,
  title = {Algebraic {{Modeling Languages}} for {{Optimization}}},
  booktitle = {Encyclopedia of {{Operations Research}} and {{Management Science}}},
  author = {Fourer, Robert},
  editor = {Gass, Saul I. and Fu, Michael C.},
  year = {2016},
  month = jan,
  pages = {43--51},
  publisher = {Springer},
  address = {Boston, MA},
  doi = {10.1007/978-1-4419-1153-7_25},
  url = {https://doi.org/10.1007/978-1-4419-1153-7_25},
  urldate = {2024-01-26},
  isbn = {978-1-4419-1153-7},
  langid = {english}
}

@article{fragniereOptimizationModelingLanguages1999,
  title = {Optimization {{Modeling Languages}}},
  author = {Fragniere, Emmanuel},
  year = {1999},
  month = sep,
  langid = {english}
}

@article{gillSNOPTSQPAlgorithm2005,
  title = {{{SNOPT}}: {{An SQP Algorithm}} for {{Large-Scale Constrained Optimization}}},
  shorttitle = {{{SNOPT}}},
  author = {Gill, Philip E. and Murray, Walter and Saunders, Michael A.},
  year = {2005},
  month = jan,
  journal = {SIAM Review},
  volume = {47},
  number = {1},
  pages = {99--131},
  publisher = {{Society for Industrial and Applied Mathematics}},
  issn = {0036-1445},
  doi = {10.1137/S0036144504446096},
  url = {https://epubs.siam.org/doi/abs/10.1137/S0036144504446096},
  urldate = {2021-04-08},
  abstract = {Sequential quadratic programming (SQP) methods have proved highly effective for solving constrained optimization problems with smooth nonlinear functions in the objective and constraints. Here we consider problems with general inequality constraints (linear and nonlinear). We assume that first derivatives are available and that the constraint gradients are sparse. Second derivatives are assumed to be unavailable or too expensive to calculate.  We discuss an SQP algorithm that uses a smooth augmented Lagrangian merit function and makes explicit provision for infeasibility in the original problem and the QP subproblems. The Hessian of the Lagrangian is approximated using a limited-memory quasi-Newton method.  SNOPT is a particular implementation that uses a reduced-Hessian semidefinite QP solver (SQOPT) for the QP subproblems. It is designed for problems with many thousands of constraints and variables but is best suited for problems with a moderate number of degrees of freedom (say, up to 2000). Numerical results are given for most of the CUTEr and COPS test collections (about 1020 examples of all sizes up to 40000 constraints and variables, and up to 20000 degrees of freedom).}
}

@misc{grantCVXMatlabSoftware2020,
  title = {{{CVX}}: {{Matlab Software}} for {{Disciplined Convex Programming}}},
  shorttitle = {{{CVX}}},
  author = {Grant, Michael and Boyd, Stephen},
  year = {2020},
  month = dec,
  url = {http://cvxr.com/cvx/},
  urldate = {2020-12-28},
  howpublished = {CVX Research}
}

@inproceedings{grantGraphImplementationsNonsmooth2008,
  title = {Graph {{Implementations}} for {{Nonsmooth Convex Programs}}},
  booktitle = {Recent {{Advances}} in {{Learning}} and {{Control}}},
  author = {Grant, Michael C. and Boyd, Stephen P.},
  editor = {Blondel, Vincent D. and Boyd, Stephen P. and Kimura, Hidenori},
  year = {2008},
  series = {Lecture {{Notes}} in {{Control}} and {{Information Sciences}}},
  pages = {95--110},
  publisher = {Springer},
  address = {London},
  doi = {10.1007/978-1-84800-155-8_7},
  abstract = {We describe graph implementations, a generic method for representing a convex function via its epigraph, described in a disciplined convex programming framework. This simple and natural idea allows a very wide variety of smooth and nonsmooth convex programs to be easily specified and efficiently solved, using interiorpoint methods for smooth or cone convex programs.},
  isbn = {978-1-84800-155-8},
  langid = {english}
}

@misc{GurobiOptimizerExample,
  title = {Gurobi {{Optimizer Example Tour}}},
  year = {2023},
  url = {https://www.gurobi.com/documentation/}
}

@misc{GurobiOptimizerReference2023,
  title = {Gurobi {{Optimizer Reference Manual}}},
  year = {2023},
  url = {https://www.gurobi.com/documentation/},
  howpublished = {Gurobi Optimization, LLC}
}

@inproceedings{hedengrenOpensourceModelingPlatforms2023,
  title = {Open-Source Modeling Platforms},
  booktitle = {{{FOCAPO}}/{{CPC}} 2023},
  author = {Hedengren, John and Nicholson, Bethany},
  year = {2023},
  address = {San Antonio, TX},
  url = {http://focapo-cpc.org/index.cfm},
  abstract = {A review of current trends in scientific computing reveals a broad shift to open-source and higher-level programming languages such as Python and growing career opportunities over the next decade. Open-source modeling tools accelerate innovation in equation-based and data-driven applications. Significant resources have been deployed to develop datadriven tools (PyTorch, TensorFlow, Scikit-learn) from tech companies that rely on machine learning services to accelerate business needs. The data and applications of the software are proprietary but the foundational tools are open. Opensource equation-based tools such as Pyomo, CasADi, Gekko, and JuMP are also gaining momentum according to user community and development pace metrics. The future of open-source modeling tools is in specialization and interfaces to other specialized packages. Integration of data-driven (empirical) and equation-based (principles, knowledge-driven) tools is emerging. New compute hardware, productivity software, and training resources have the potential to radically accelerate progress. However, long-term support mechanisms are still needed to sustain momentum and maintenance for key foundational packages.},
  langid = {english}
}

@inproceedings{hijaziGravityMathematicalModeling2018,
  title = {Gravity: {{A Mathematical Modeling Language}} for {{Optimization}} and {{Machine Learning}}},
  shorttitle = {Gravity},
  booktitle = {{{NIPS}} 2018 {{Workshop MLOSS}}},
  author = {Hijazi, Hassan and Wang, Guanglei and Coffrin, Carleton},
  year = {2018},
  month = oct,
  url = {https://github.com/coin-or/Gravity},
  urldate = {2022-08-26},
  abstract = {Gravity is an open source, scalable, memory efficient modeling language for solving mathematical models in Optimization and Machine Learning. Gravity exploits structure to reduce function...},
  langid = {english}
}

@book{hurlimannMathematicalModelingBasics2024,
  title = {Mathematical {{Modeling Basics}}},
  author = {H{\"u}rlimann, Tony},
  year = {2024},
  month = oct,
  url = {https://matmod.ch/lpl/doc/modelbook.pdf},
  langid = {english}
}

@misc{JuMP2024,
  title = {{{JuMP}}},
  year = {2024},
  month = nov,
  url = {https://jump.dev/JuMP.jl/stable/JuMP.pdf},
  urldate = {2024-12-25},
  howpublished = {JuMP-dev}
}

@misc{legatJuMPMathOptInterfaceOptimizationframework2019,
  type = {Conference Presentation},
  title = {{{JuMP}} and {{MathOptInterface}}: {{An}} Optimizationframework Extensible by Design},
  author = {Legat, Beno{\^i}t},
  year = {2019},
  month = jun,
  url = {https://dial.uclouvain.be/pr/boreal/object/boreal%3A217884/datastream/PDF_01/view}
}

@article{legatMathOptInterfaceDataStructure2020,
  title = {{{MathOptInterface}}: A Data Structure for Mathematical Optimization Problems},
  shorttitle = {{{MathOptInterface}}},
  author = {Legat, Benoit and Dowson, Oscar and Garcia, Joaquim Dias and Lubin, Miles},
  year = {2020},
  month = sep,
  journal = {arXiv:2002.03447 [math]},
  eprint = {2002.03447},
  primaryclass = {math},
  url = {http://arxiv.org/abs/2002.03447},
  urldate = {2021-04-08},
  abstract = {We introduce MathOptInterface, an abstract data structure for representing mathematical optimization problems based on combining pre-defined functions and sets. MathOptInterface is significantly more general than existing data structures in the literature, encompassing, for example, a spectrum of problems classes from integer programming with indicator constraints to bilinear semidefinite programming. We also outline an automated rewriting system between equivalent formulations of a constraint. MathOptInterface has been implemented in practice, forming the foundation of a recent rewrite of JuMP, an open-source algebraic modeling language in the Julia language. The regularity of the MathOptInterface representation leads naturally to a general file format for mathematical optimization we call MathOptFormat. In addition, the automated rewriting system provides modeling power to users while making it easy to connect new solvers to JuMP.},
  archiveprefix = {arXiv}
}

@misc{lofbergYALMIP,
  title = {{{YALMIP}}},
  author = {L{\"o}fberg, Johan},
  url = {https://yalmip.github.io/}
}

@inproceedings{lofbergYALMIPToolboxModeling2004,
  title = {{{YALMIP}} : A Toolbox for Modeling and Optimization in {{MATLAB}}},
  shorttitle = {{{YALMIP}}},
  booktitle = {2004 {{IEEE International Conference}} on {{Robotics}} and {{Automation}}},
  author = {L{\"o}fberg, Johan},
  year = {2004},
  month = sep,
  pages = {284--289},
  doi = {10.1109/CACSD.2004.1393890},
  abstract = {The MATLAB toolbox YALMIP is introduced. It is described how YALMIP can be used to model and solve optimization problems typically occurring in systems and control theory. In this paper, free MATLAB toolbox YALMIP, developed initially to model SDPs and solve these by interfacing eternal solvers. The toolbox makes development of optimization problems in general, and control oriented SDP problems in particular, extremely simple. In fact, learning 3 YALMIP commands is enough for most users to model and solve the optimization problems}
}

@misc{MathOptInterface2024,
  title = {{{MathOptInterface}}},
  year = {2024},
  month = jan,
  url = {https://github.com/jump-dev/MathOptInterface.jl},
  urldate = {2023-01-16},
  abstract = {An abstraction layer for mathematical optimization solvers.},
  howpublished = {JuMP-dev}
}

@misc{ModelPredictiveControl2020,
  title = {Model {{Predictive Control Toolbox}}},
  year = {2020},
  url = {https://www.mathworks.com/products/model-predictive-control.html},
  howpublished = {The Mathworks}
}

@misc{MOSEKModelingCookbook2024,
  title = {{{MOSEK Modeling Cookbook}}},
  year = {2024},
  month = sep,
  url = {https://docs.mosek.com/MOSEKModelingCookbook-a4paper.pdf},
  howpublished = {Mosek ApS}
}

@misc{MOSEKOptimizationSuite2023,
  title = {{{MOSEK Optimization Suite}}},
  year = {2024},
  month = jan,
  url = {https://docs.mosek.com/10.1/intro.pdf},
  howpublished = {MOSEK ApS}
}

@misc{MOSEKOptimizationToolbox2024,
  title = {{{MOSEK Optimization Toolbox}} for {{MATLAB}}},
  year = {2024},
  month = jan,
  url = {https://docs.mosek.com/10.1/toolbox.pdf},
  howpublished = {MOSEK ApS}
}

@misc{MOSEKOptimizerAPI2024,
  title = {{{MOSEK Optimizer API}} for {{Julia}}},
  year = {2024},
  month = oct,
  url = {https://docs.mosek.com/10.2/juliaapi.pdf},
  howpublished = {MOSEK ApS}
}

@misc{OptimizationToolbox2023,
  title = {Optimization {{Toolbox}}},
  shorttitle = {Optimization {{Toolbox}}},
  year = {2023},
  url = {https://www.mathworks.com/products/optimization.html},
  howpublished = {The Mathworks, Inc.}
}

@misc{ReferenceManualArtelys,
  title = {Reference Manual --- {{Artelys Knitro}} 14.0 {{User}}'s {{Manual}}},
  year = {2023},
  url = {https://www.artelys.com/app/docs/knitro/3_referenceManual.html#chap-referencemanual},
  urldate = {2024-01-27}
}

@inproceedings{udellConvexOptimizationJulia2014,
  title = {Convex {{Optimization}} in {{Julia}}},
  booktitle = {2014 {{First Workshop}} for {{High Performance Technical Computing}} in {{Dynamic Languages}}},
  author = {Udell, M. and Mohan, K. and Zeng, D. and Hong, J. and Diamond, S. and Boyd, S.},
  year = {2014},
  month = nov,
  pages = {18--28},
  doi = {10.1109/HPTCDL.2014.5},
  abstract = {This paper describes Convex1, a convex optimization modeling framework in Julia. Convex translates problems from a user-friendly functional language into an abstract syntax tree describing the problem. This concise representation of the global structure of the problem allows Convex to infer whether the problem complies with the rules of disciplined convex programming (DCP), and to pass the problem to a suitable solver. These operations are carried out in Julia using multiple dispatch, which dramatically reduces the time required to verify DCP compliance and to parse a problem into conic form. Convex then automatically chooses an appropriate backend solver to solve the conic form problem.}
}

@misc{UserGuideArtelys,
  title = {User Guide --- {{Artelys Knitro}} 14.0 {{User}}'s {{Manual}}},
  year = {2023},
  url = {https://www.artelys.com/app/docs/knitro/2_userGuide.html},
  urldate = {2024-01-27}
}

@misc{vielmaConicOptimizationJulia2020,
  type = {Conference Presentation},
  title = {Conic {{Optimization}} in {{Julia}} and {{JuMP}}},
  author = {Vielma, Juan Pablo},
  year = {2020},
  url = {https://juan-pablo-vielma.github.io/presentations/JULIACON_2020.pdf},
  langid = {english}
}
